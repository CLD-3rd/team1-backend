name: Build and Push Docker Image To AWS ECR AND Deploy App
on:
  push:
    branches:
      - ci/setup-github-actions

jobs:
  ci:
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.set_sha.outputs.SHORT_SHA }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          
      - name: Make application.properties
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.PROPERTIES }}" > ./application.properties
        shell: bash
        
      - name: Build with Maven
        run: mvn -DskipTests -B package --file pom.xml
        
      - name: Naming jar file
        run: mv ./target/*.jar ./target/app.jar
  
      - name: Check jar file
        run: ls ./target
  
      - uses: actions/upload-artifact@v4
        with:
          name: app
          path: ./target/*.jar
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR (Private)
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_PRIVATE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Create Short SHA
        id: set_sha
        run : |
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
        # run: echo "IMAGE_TAG=$(date + '%Y%m%d-%H%M%s')" >> $GITHUB_ENV
      
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.AWS_ECR_PRIVATE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_PRIVATE_REPOSITORY }}:${{ env.SHORT_SHA }} .

      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ECR_PRIVATE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_PRIVATE_REPOSITORY }}:${{ env.SHORT_SHA }}
      
      # GitHub Actions에서 manigest image 태그를 변경
      # - name: Update image tag
      #   run: |
      #     sed -i "s|image: .*|image: <이미지주소>:${{ github.sha }}|" k8s/deployment.yaml

      # GitHub Actions에서 YAML을 Git에 커밋 & push
      # - name: Commit and push
      #   run: |
      #     git config user.name "GitHub Actions"
      #     git config user.email "actions@github.com"
      #     git add k8s/deployment.yaml
      #     git commit -m "Update image tag to ${{ github.sha }}"
      #     git push origin main


      # ArgoCD Git 변경 감지 후 EKS에 배포 (kubectl apply)
      # deployment에 ecr 이미지 주소